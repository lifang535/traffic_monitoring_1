import logging

# set up logging to file - see previous section for more details
logger_loader = logging.getLogger('logger_loader')
logger_loader.setLevel(logging.INFO)
fh_loader = logging.FileHandler('logs/loader.log', mode='w')
fh_loader.setLevel(logging.INFO)
formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
fh_loader.setFormatter(formatter)
logger_loader.addHandler(fh_loader)

logger_model_1 = logging.getLogger('logger_model_1')
logger_model_1.setLevel(logging.INFO)
fh_model_1 = logging.FileHandler('logs/model_1.log', mode='w')
fh_model_1.setLevel(logging.INFO)
formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
fh_model_1.setFormatter(formatter)
logger_model_1.addHandler(fh_model_1)

logger_model_2 = logging.getLogger('logger_model_2')
logger_model_2.setLevel(logging.INFO)
fh_model_2 = logging.FileHandler('logs/model_2.log', mode='w')
fh_model_2.setLevel(logging.INFO)
formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
fh_model_2.setFormatter(formatter)
logger_model_2.addHandler(fh_model_2)

logger_model_3 = logging.getLogger('logger_model_3')
logger_model_3.setLevel(logging.INFO)
fh_model_3 = logging.FileHandler('logs/model_3.log', mode='w')
fh_model_3.setLevel(logging.INFO)
formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
fh_model_3.setFormatter(formatter)
logger_model_3.addHandler(fh_model_3)

logger_model_4 = logging.getLogger('logger_model_4')
logger_model_4.setLevel(logging.INFO)
fh_model_4 = logging.FileHandler('logs/model_4.log', mode='w')
fh_model_4.setLevel(logging.INFO)
formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
fh_model_4.setFormatter(formatter)
logger_model_4.addHandler(fh_model_4)

logger_model_5 = logging.getLogger('logger_model_5')
logger_model_5.setLevel(logging.INFO)
fh_model_5 = logging.FileHandler('logs/model_5.log', mode='w')
fh_model_5.setLevel(logging.INFO)
formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
fh_model_5.setFormatter(formatter)
logger_model_5.addHandler(fh_model_5)


logger_model_1_rate = logging.getLogger('logger_model_1_rate')
logger_model_1_rate.setLevel(logging.INFO)
fh_model_1_rate = logging.FileHandler('logs_rate/model_1_rate.log', mode='w')
fh_model_1_rate.setLevel(logging.INFO)
formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
fh_model_1_rate.setFormatter(formatter)
logger_model_1_rate.addHandler(fh_model_1_rate)

logger_model_2_rate = logging.getLogger('logger_model_2_rate')
logger_model_2_rate.setLevel(logging.INFO)
fh_model_2_rate = logging.FileHandler('logs_rate/model_2_rate.log', mode='w')
fh_model_2_rate.setLevel(logging.INFO)
formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
fh_model_2_rate.setFormatter(formatter)
logger_model_2_rate.addHandler(fh_model_2_rate)

logger_model_3_rate = logging.getLogger('logger_model_3_rate')
logger_model_3_rate.setLevel(logging.INFO)
fh_model_3_rate = logging.FileHandler('logs_rate/model_3_rate.log', mode='w')
fh_model_3_rate.setLevel(logging.INFO)
formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
fh_model_3_rate.setFormatter(formatter)
logger_model_3_rate.addHandler(fh_model_3_rate)

logger_model_4_rate = logging.getLogger('logger_model_4_rate')
logger_model_4_rate.setLevel(logging.INFO)
fh_model_4_rate = logging.FileHandler('logs_rate/model_4_rate.log', mode='w')
fh_model_4_rate.setLevel(logging.INFO)
formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
fh_model_4_rate.setFormatter(formatter)
logger_model_4_rate.addHandler(fh_model_4_rate)

logger_model_5_rate = logging.getLogger('logger_model_5_rate')
logger_model_5_rate.setLevel(logging.INFO)
fh_model_5_rate = logging.FileHandler('logs_rate/model_5_rate.log', mode='w')
fh_model_5_rate.setLevel(logging.INFO)
formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
fh_model_5_rate.setFormatter(formatter)
logger_model_5_rate.addHandler(fh_model_5_rate)


logger_latency = logging.getLogger('logger_latency')
logger_latency.setLevel(logging.INFO)
fh_latency = logging.FileHandler('logs/latency.log', mode='w')
fh_latency.setLevel(logging.INFO)
formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
fh_latency.setFormatter(formatter)
logger_latency.addHandler(fh_latency)


